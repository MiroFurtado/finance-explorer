{"version":3,"sources":["../server/data.js"],"names":["addSession","getSession","addNotifier","getTasks","getTask","_sessions","_notifiers","task","tasks","id","name","percentComplete","status","html","increments","setInterval","Math","floor","random","length","forEach","notifier","min","token","data","type","cb","push","filters","Promise","resolve","filter","Object","keys","some","t"],"mappings":"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","file":"data.js","sourcesContent":["const _sessions = {};\nconst _notifiers = {\n  task: []\n};\n\nexport const tasks = [\n  {\n    id: 'task-1',\n    name: 'Initializing instance',\n    percentComplete: 0,\n    status: 'Waiting',\n    html: '<b>oh</b>',\n  },\n  {\n    id: 'task-2',\n    name: 'Adding components',\n    percentComplete: 0,\n    status: 'Waiting',\n    html: '<b>oh</b>',\n  },\n  {\n    id: 'task-3',\n    name: 'Testing infrastructure',\n    percentComplete: 0,\n    status: 'Waiting'\n  },\n  {\n    id: 'task-4',\n    name: 'Removing instance',\n    percentComplete: 0,\n    status: 'Waiting'\n  }\n];\n\nconst increments = [5, 10, 20, 25];\n\nsetInterval(\n  () => {\n    const task = tasks[\n      Math.floor(Math.random() * tasks.length)\n    ];\n\n    if (!task.percentComplete) {\n      task.status = 'Running';\n    }\n\n    _notifiers.task.forEach(notifier => notifier(task));\n  },\n  2000\n);\n\nsetInterval(\n  () => {\n    tasks.forEach((task) => {\n      if (task.status === 'Running') {\n        if (task.percentComplete < 100) {\n          task.percentComplete = Math.min(100, task.percentComplete +\n            increments[\n              Math.floor(Math.random() * increments.length)\n            ]\n          );\n        } else {\n          task.percentComplete = 0;\n          task.status = 'Waiting';\n        }\n        _notifiers.task.forEach(notifier => notifier(task));\n      }\n    });\n  },\n  1000\n);\n\nexport function addSession(token, data) {\n  _sessions[token] = data;\n}\n\nexport function getSession(token) {\n  return _sessions[token];\n}\n\nexport function addNotifier(type, cb) {\n  _notifiers[type].push(cb);\n}\n\nexport function getTasks(filters) {\n  if (filters) {\n    return Promise.resolve({\n      tasks: tasks.filter(task =>\n        Object.keys(filters).some(filter => task[filter] === filters[filter])\n      )\n    });\n  }\n  return Promise.resolve({ tasks });\n}\n\nexport function getTask(id) {\n  let task;\n  tasks.some((t) => {\n    if (t.id === id) {\n      task = t;\n      return true;\n    }\n    return false;\n  });\n  return Promise.resolve({ task });\n}\n\nexport default { addNotifier, addSession, getSession, getTask, getTasks };\n"]}